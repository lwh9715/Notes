PostgreSql

1）#docker启动postgresql
	
	1）依赖拉取
	docker拉取postgresql文件

	2）创建挂载目录pgdata
	docker volume create pgdata

	3）docker 启动命令
	docker run --name postgres \
	-v /etc/localtime:/etc/localtime:ro \
	-v pgdata:/var/lib/postgresql/data \
	-e POSTGRES_PASSWORD=liangwenhui \
	-p 5432:5432 -d postgres:12.1

	4）开通admin账号
	CREATE USER admin WITH PASSWORD 'cimc@5432' SUPERUSER;

	5）授权该数据库所有权限
	GRANT ALL PRIVILEGES ON DATABASE postgres TO admin;


2）#初识Postgresql数据库命令

	1）切换系统默认账号
	su postgres

	2）查看PgSQL版本
	psql --version

	3）创建数据库
	createdb hello_pg

	4）删除数据库
	dropdb hello_pg

	5）查看数据库
	psql hello_pg

	6)查看数据库列表
	psql -l


3）#初识Postgresql表命令

	1）创建表
	create table

	实例：
	create table sentence (title varchar(255),content text);

	2）删除表
	drop table sentence

4）#数据库类型

	1）数据型
	integer
	real（浮点型）
	serial
	2）文字型
	char
	varchar
	text
	3）布尔型
	boolean
	4）日期型
	date
	time
	timestamp
	5）特色类型
	array


#Postgresql 事务

	1）begin（开启事务）
	2）commit（提交事务）
	3）rollback（回滚事务）



#SQL值为空时，取固定值（类似三元运算符）

COALESCE(SUM(dc.qty), '0')


#ARRAY_AGG聚合函数，就是把多个值合并到一个数组中
array_agg(case_label) as case_label


#查看触发器
select * from information_schema.triggers;


#查看函数
SELECT * FROM pg_trigger where tgname like 'f%';


#触发器及触发器自带函数
NEW：数据类型是record，在insert、update操作触发时存储新的数据行
OLD：数据类型是record，在update、delete操作触发时存储旧的数据行
TG_OP：内容为“INSERT”，“UPDATE”，“DELETE”，“TRUNCATE”，用于指定DML语句类型
TG_TABLE_NAME：触发器所在表的表名称 TG_SCHEMA_NAME：触发器所在表的模式 



#字符连接函数

-- pgsql的三种字符链接函数，将多列的字段连接成一条数据
-- arrary_agg （）  string_agg( )  xmlagg()  
分别来处理数组，字符串和xml文档。 


#查看表有没索引
SELECT indexname, indexdef
FROM pg_indexes
WHERE tablename = 'fina_arap_link_quote';



#查数据库进程卡的sql

SELECT pid,
       usename,
       application_name,
       client_addr,
       client_hostname,
       backend_start,
       query_start,
       (now() - query_start) AS duration,
       state,
       query
FROM pg_stat_activity
WHERE STATE ILIKE 'active'
ORDER BY duration DESC
limit 30



#取消进程sql

SELECT pg_terminate_backend(23852)