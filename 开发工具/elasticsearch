elasticsearch

文档：一条数据就是一个文档，es是json格式
字段：json文档中的字段
索引：同类型文档的集合
映射：索引中文档的约束，比如字段名称类型


1）创建网络
docker network create es-net


2)拉取elasticsearch镜像
docker pull elasticsearch:7.12.1

3)启动elasticsearch
docker run -d \
--name es \
-e "ES_JAVA_OPTS=-Xms512m -Xmx512m" \
-e "discovery.type=single-node" \
-v es-data:/usr/share/elasticsearch/data \
-v es-plugins:/usr/share/elasticsearch/plugins \
--privileged \
--network es-net \
-p 9200:9200 \
-p 9300:9300 \
elasticsearch:7.12.1


4)部署kibana
docker run -d --name kibana \
-e ELASTICSEARCH_HOSTS=http://es:9200 \
--network=es-net \
-p 5601:5601 \
kibana:7.12.1

5)安装IK分词器
下载ik分词器文件压缩包,放到es-plugins数据卷中，重启es即可生效
https://github.com/medcl/elasticsearch-analysis-ik/releases/tag/v7.12.1

"analyzer": "ik_max_word",更细化分词，占用内存更多
"analyzer": "ik_smart",智能切分，占用内存少

6）拓展词库

在ik分词器插件下config目录中的IKAnalyzer.cfg.xml文件

<properties>
	<comment>IK Analyzer 扩展配置</comment>
	<!--用户可以在这里配置自己的扩展字典 -->
	<entry key="ext_dict">ext.dic</entry>
	 <!--用户可以在这里配置自己的扩展停止词字典-->
	<entry key="ext_stopwords">stopword.dic</entry>
	<!--用户可以在这里配置远程扩展字典 -->
	<!-- <entry key="remote_ext_dict">words_location</entry> -->
	<!--用户可以在这里配置远程扩展停止词字典-->
	<!-- <entry key="remote_ext_stopwords">words_location</entry> -->
</properties>


在config同级目录下创建ext.dic / stopword.dic 文件,重启es即可生效
注明：只有在使用"analyzer": "ik_smart","analyzer": "ik_max_word"才有效


7）索引库操作

mapping属性：（mapping是对索引库中文档的约束,常见的mapping属性包括）

#type：字段数据类型，常见的简单类型有
	字符串：text（可分词文本），keyword（精确值）
	数值：long,integer,byte,double,float
	布尔：Boolean
	日期：date
	对象：object

#index 是否创建索引,默认为true

#analyzer 分词器,只有跟text类型才有使用,其他的类型不需要分词

8）创建索引库

PUT /索引库名称

PUT /amos
{
  "mappings": {
    "properties": {
      "info": {
        "type": "text",
        "analyzer": "ik_max_word"
      },
      "email": {
        "type": "keyword",
        "index": false
      },
      "name": {
        "type": "object",
        "properties": {
          "firstName": {
            "type": "keyword",
            "index": false
          }
        }
      }
    }
  }
}


9)查询索引库

GET /amos

10）删除索引库

DELETE /amos

11)修改索引库

索引库和mapping一旦创建无法修改，但是可以添加新的字段（全新的字段名），语法如下

PUT /amos/_mapping

{
	"properties":{
		"新字段名称":{
			"type":"object"
		}	
	}
}

DSL语法示例：

POST /索引库名/_doc/文档id
{
	"字段1":"值1",
	"字段2":"值2",
	"字段3":{
			"子属性1":"值3",
			"子属性2":"值4",
	},
}

12）添加文档

POST /amos/_doc/a1
{
  "info":"liangwenhui振作起来",
  "email":"lwh9715@gmail.com",
  "name":{
    "firstname":"wenhui",
    "lastname":"liang"
  }
}

13）查询文档

GET /amos/_doc/a1

14）删除文档

DELETE /amos/_doc/a1

15）修改文档

方式一：全量修改，会删除旧的文档，添加新的文档

POST /amos/_doc/a1
{
  "info":"liangwenhui振作起来",
  "email":"lwh9715@gmail.com",
  "name":{
    "firstname":"wenhui",
    "lastname":"liang"
  }
}

方式二：局部更新	（doc为固定写法）

POST /amos/_update/a1
{
  "doc": {
      "info":"liangwenhui振作",
      "email":"lwx768561@gmail.com" 
  }
}


16)es支持两种地理坐标数据类型

geo_point:由纬度和经度确定的一个点
geo_shape:有多个geo_point组成的复杂几何图形

17）字段拷贝可以使用copy_to属性将当前字段拷贝到指定字段

"all":{
	"type":"text",
	"analyzer":"ik_max_word"
},
"brand":{
	"type":"keyword",
	"copy_to":"all"
}