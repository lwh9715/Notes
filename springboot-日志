springboot log日志框架

springboot选用SLF4j和logback

日志门面（日志抽象层）

jcl，slf4j，jboss-logging

日志实现

Log4j，Log4j2，Logback

SLF4j使用

1.如何在系统中使用slf4j
开发时日志记录直接调用日志抽象层里面的方法
给系统导入slf4j的jar和logback的实现jar

代码调用：
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

public class HelloWorld {
  public static void main(String[] args) {
    Logger logger = LoggerFactory.getLogger(HelloWorld.class);
    logger.info("Hello World");


遗留问题：
比如a系统：（slf4j+logback）:spring(commons-logging),Hibernate(jboss-logging)

如何让系统中所有的日志都统一到slf4j：
1）将系统中其他日志框架先排除出去
2）用中间包来替换原有的日志框架
3）导入slf4j其他的实现


springboot日志关系

1）springboot底层也是使用slf4j+logback的方式进行日志记录
2）springboot也把其他的日志替换成了slf4j
3）中间替换包
 

springboot能自动适配所有的日志，且底层使用slf4j+logback方式记录日志，
引入其他框架的时候，只需要把这个框架依赖的日志框架排除




不需要引入什么依赖，可直接使用以下配置

springboot默认配置

#调整日志级别：
logging.level.com.spring=trace
#日志存放指定路径：（使用spring.log作为默认文件）
logging.file=G:/log
#在控制台输出的日志格式
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50} - %msg%n
#在文件中输出的日志格式
logging.pattern.file=%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50} - %msg%n








